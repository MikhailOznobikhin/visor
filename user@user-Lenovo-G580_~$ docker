user@user-Lenovo-G580:~$ docker

Usage:	docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/user/.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/user/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/user/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/user/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  engine      Manage the docker engine
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
user@user-Lenovo-G580:~$ cd ~/ispvisor/
user@user-Lenovo-G580:~/ispvisor$ docker-compose up --build -d
Creating network "data-ispvisor" with the default driver
Building ispvisor
Step 1/9 : FROM python:3.8.1-buster
3.8.1-buster: Pulling from library/python
dc65f448a2e2: Pull complete
346ffb2b67d7: Pull complete
dea4ecac934f: Pull complete
8ac92ddf84b3: Pull complete
a3ca60abc08a: Pull complete
9253bd2ee3f6: Pull complete
fad96c8dce44: Pull complete
ec0f51d2752d: Pull complete
1fa0065c6287: Pull complete
Digest: sha256:3322c368377c34a7f60788e8f456dad5957ce9cf0d05ef2e08dcdc354d02b54f
Status: Downloaded newer image for python:3.8.1-buster
 ---> efdecc2e377a
Step 2/9 : LABEL maintainer="d.naumov@ispsystem.com"
 ---> Running in fc9827b92d88
Removing intermediate container fc9827b92d88
 ---> 3c950e0f3e84
Step 3/9 : COPY requirements.txt /requirements.txt
 ---> b711f0a2e669
Step 4/9 : RUN pip3 install --upgrade pip && pip3 install -U -r requirements.txt
 ---> Running in 74c40a232121
Requirement already up-to-date: pip in /usr/local/lib/python3.8/site-packages (20.0.2)
Collecting aiohttp
  Downloading aiohttp-3.6.2-py3-none-any.whl (441 kB)
Collecting aiosqlite
  Downloading aiosqlite-0.11.0.tar.gz (10 kB)
Collecting yarl<2.0,>=1.0
  Downloading yarl-1.4.2-cp38-cp38-manylinux1_x86_64.whl (253 kB)
Collecting attrs>=17.3.0
  Downloading attrs-19.3.0-py2.py3-none-any.whl (39 kB)
Collecting async-timeout<4.0,>=3.0
  Downloading async_timeout-3.0.1-py3-none-any.whl (8.2 kB)
Collecting chardet<4.0,>=2.0
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
Collecting multidict<5.0,>=4.5
  Downloading multidict-4.7.5-cp38-cp38-manylinux1_x86_64.whl (162 kB)
Collecting idna>=2.0
  Downloading idna-2.9-py2.py3-none-any.whl (58 kB)
Building wheels for collected packages: aiosqlite
  Building wheel for aiosqlite (setup.py): started
  Building wheel for aiosqlite (setup.py): finished with status 'done'
  Created wheel for aiosqlite: filename=aiosqlite-0.11.0-py3-none-any.whl size=11140 sha256=a263326f7412fb49799c4c6188f71bba2a7eca0a006c5a6f80d6ba49f781e016
  Stored in directory: /root/.cache/pip/wheels/f5/e2/a2/7835dd6a18c293be371b065f78f71e47d3e274e5faf2df1e07
Successfully built aiosqlite
Installing collected packages: multidict, idna, yarl, attrs, async-timeout, chardet, aiohttp, aiosqlite
Successfully installed aiohttp-3.6.2 aiosqlite-0.11.0 async-timeout-3.0.1 attrs-19.3.0 chardet-3.0.4 idna-2.9 multidict-4.7.5 yarl-1.4.2
Removing intermediate container 74c40a232121
 ---> 309dd20c8a48
Step 5/9 : COPY misc /misc
 ---> 15343e92bdfd
Step 6/9 : COPY modules /modules
 ---> 9cc1e86e1144
Step 7/9 : COPY ispvisor.py /ispvisor.py
 ---> d35453e65f0e
Step 8/9 : COPY config.py /config.py
 ---> e183c0ce4ff9
Step 9/9 : CMD ["python3", "-u", "/ispvisor.py"]
 ---> Running in 7e6212ea324a
Removing intermediate container 7e6212ea324a
 ---> e210864e7183

Successfully built e210864e7183
Successfully tagged ispvisor:latest
Creating ispvisor ... done
user@user-Lenovo-G580:~/ispvisor$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                    NAMES
9ca5abbc1c25        ispvisor            "python3 -u /ispvisoâ€¦"   About a minute ago   Up About a minute   0.0.0.0:2113->2113/tcp   ispvisor
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl localhost:2113/feature-value/metric-area/list
user@user-Lenovo-G580:~/ispvisor$ curl -X POST -d '{"page": 1, "x": 20, "y": 30, "height": 40, "width": 60, "metrica": "metric1"}' localhost:2113/feature-value/metric-area
user@user-Lenovo-G580:~/ispvisor$ curl localhost:2113/feature-value/metric-area/list
{"id": 1, "page": "1", "x": 20.0, "y": 30.0, "width": 60.0, "height": 40.0, "metrica": "metric1"}user@user-Lenovo-G580:~/ispvisor$ curl localhuser@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl -X POST -d '{"page": 1, "x": 20, "y": 30, "height": 40, "width": 60, "metrica": "metric2"}' localhost:2113/feature-value/metric-area
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl localhost:2113/feature-value/metric-area/list
[{"id": 1, "page": "1", "x": 20.0, "y": 30.0, "width": 60.0, "height": 40.0, "metrica": "metric1"}, {"id": 2, "page": "1", "x": 20.0, "y": 30.0, "width": 60.0, "height": 40.0, "metrica": "metric2"}]user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl -X DELETE localhost:2113/feature-value/metric-area/1
{}user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl localhost:2113/feature-value/metric-area/list
{"id": 2, "page": "1", "x": 20.0, "y": 30.0, "width": 60.0, "height": 40.0, "metrica": "metric2"}user@user-Lenovo-G580:~/ispvisor$ curl localhost:2113/feature-value/metric-area
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl -X PUT -d '{"page": 1, "x": 20, "y": 30, "height": 40, "width": 60, "metrica": "metric23"}' localhost:2113/feature-value/metric-area/2
user@user-Lenovo-G580:~/ispvisor$ $ curlocalhost:2113/feature-value/metric-area/list
{"id": 2, "page": "1", "x": 20.0, "y": 30.0, "width": 60.0, "height": 40.0, "metrica": "metric23"}user@user-Lenovo-G580:~/ispvisor$ ^C
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ 
user@user-Lenovo-G580:~/ispvisor$ curl localhost:2113/feature-value/transitions/test
[{"event": "/page1", "next_event": "/page2", "users_nunique": 10, "users_count": 20, "session_nunique": 15, "times_median": 2494.0, "regularity": 2, "ses_regularity": 1.5, "unique_in_ses": 1.5}, {"event": "/page1", "next_event": "/page3", "users_nunique": 20, "users_count": 40, "session_nunique": 30, "times_median": 2494.0, "regularity": 2, "ses_regularity": 1.5, "unique_in_ses": 1.5}, {"event": "/page1", "next_event": "/page4", "users_nunique": 30, "users_count": 60, "session_nunique": 45, "times_median": 2494.0, "regularity": 2, "ses_regularity": 1.5, "unique_in_ses": 1.5}]user@user-Lenovo-G580:~/ispvisor$ ^C
user@user-Lenovo-G580:~/ispvisor$ 
